name: DNAPass Password Generator CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang]
        exclude:
          - os: windows-latest
            compiler: clang

    steps:
    - uses: actions/checkout@v4

    - name: Debug - Show commit and file content
      run: |
        echo "Current commit:"
        git log -1
        echo "Content of dnapass_generator.cpp:"
        type dnapass_password_generator\dnapass_generator.cpp
      shell: cmd
      if: matrix.os == 'windows-latest'
    - name: Debug - Show commit and file content (Unix)
      run: |
        echo "Current commit:"
        git log -1
        echo "Content of dnapass_generator.cpp:"
        cat dnapass_password_generator/dnapass_generator.cpp
      shell: bash
      if: matrix.os != 'windows-latest'

    - name: Set up compiler
      run: |
        if "${{ matrix.os }}" == "ubuntu-latest" || "${{ matrix.os }}" == "macos-latest"; then
          if [ "${{ matrix.compiler }}" == "gcc" ]; then
            sudo apt-get update -y
            sudo apt-get install -y g++ cmake
          else
            sudo apt-get update -y
            sudo apt-get install -y clang cmake
          fi
        elif "${{ matrix.os }}" == "windows-latest"; then
          choco install cmake -y --no-progress
          if "${{ matrix.compiler }}" == "gcc" ; then
            choco install mingw -y --no-progress
            echo "C:\ProgramData\chocolatey\bin" >> $env:GITHUB_PATH
            echo "C:\Program Files\mingw-w64\mingw64\bin" >> $env:GITHUB_PATH
          fi
        fi
      shell: bash

    - name: Verify compiler setup (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        where g++
        g++ --version
      shell: cmd

    - name: Install clang-tidy (Linux and macOS)
      if: matrix.os != 'windows-latest'
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          sudo apt-get install -y clang-tidy
        else
          brew install llvm
          echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH
        fi
      shell: bash

    - name: Create build directory (Windows)
      if: matrix.os == 'windows-latest'
      run: mkdir build
      shell: cmd

    - name: Change to build directory (Windows)
      if: matrix.os == 'windows-latest'
      run: cd build
      shell: cmd

    - name: Debug - Show current directory and CMakeLists.txt (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo Current directory: %CD%
        dir CMakeLists.txt
      shell: cmd

    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-latest' && matrix.compiler == 'gcc'
      run: cmake %GITHUB_WORKSPACE%\dnapass-password-generator -G "MinGW Makefiles" -DCMAKE_CXX_COMPILER=g++
      shell: cmd

    - name: Configure CMake (Windows - Default)
      if: matrix.os == 'windows-latest' && matrix.compiler != 'gcc'
      run: cmake %GITHUB_WORKSPACE%\dnapass-password-generator -DCMAKE_CXX_COMPILER=${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }}
      shell: cmd

    - name: Configure CMake (Unix)
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }}
      shell: bash
      if: matrix.os != 'windows-latest'

    - name: Build project
      run: |
        cd build
        cmake --build .
      shell: cmd
      if: matrix.os == 'windows-latest'
    - name: Build project (Unix)
      run: |
        cd build
        cmake --build .
      shell: bash
      if: matrix.os != 'windows-latest'

    - name: Run clang-tidy (Linux and macOS)
      if: matrix.os != 'windows-latest'
      run: |
        clang-tidy dnapass_password_generator/dnapass_generator.cpp -- -std=c++17
      shell: bash

    - name: Test executable
      run: |
        cd build
        ./dnapass_generator <<< "12"
      shell: bash
      if: matrix.os != 'windows-latest'

    - name: Test executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        .\dnapass_generator.exe < test_input.txt
      shell: cmd
      env:
        test_input.txt: |
          12
