name: DNAPass Password Generator CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang]
        exclude:
          - os: windows-latest
            compiler: clang

    steps:
    - uses: actions/checkout@v4

    - name: Debug - Show file structure
      run: |
        echo "File structure:"
        find . -name "*.cpp" -o -name "*.hpp" -o -name "CMakeLists.txt" | sort
        echo "Content of current directory:"
        ls -la
      shell: bash

    - name: Set up compiler (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -y
        sudo apt-get install -y cmake
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y g++
        else
          sudo apt-get install -y clang
        fi
      shell: bash

    - name: Set up compiler (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          brew install gcc
        else
          brew install llvm
          echo "$(brew --prefix llvm)/bin" >> $GITHUB_PATH
        fi
      shell: bash

    - name: Set up compiler (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        choco install mingw -y
      shell: pwsh

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        
        # Definir compilador baseado no OS
        if [ "${{ runner.os }}" = "Windows" ]; then
          cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug
        else
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            cmake .. -DCMAKE_BUILD_TYPE=Debug
          else
            cmake .. -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug
          fi
        fi
      shell: bash

    - name: Build project
      run: |
        cd build
        cmake --build . --config Debug
      shell: bash

    - name: Test executable
      run: |
        cd build
        if [ "${{ runner.os }}" = "Windows" ]; then
          echo "12" | ./dnapass_generator.exe
        else
          echo "12" | ./dnapass_generator
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dnapass-${{ matrix.os }}-${{ matrix.compiler }}
        path: build/dnapass_generator*
