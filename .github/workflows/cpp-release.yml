name: Publish DNAPass to GitHub Releases

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang]
        exclude:
          - os: windows-latest
            compiler: clang

    steps:
    - uses: actions/checkout@v4

    - name: Debug - Show commit and file content
      run: |
        echo "Current commit:"
        git log -1
        echo "Content of dnapass_generator.cpp:"
        cat dnapass_password_generator/dnapass_generator.cpp
      shell: bash

    - name: Set up compiler (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y g++ cmake
          echo "CMAKE_CXX_COMPILER=g++" >> $GITHUB_ENV
        else
          sudo apt-get install -y clang cmake
          echo "CMAKE_CXX_COMPILER=clang++" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Set up compiler (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        if ! command -v brew >/dev/null 2>&1; then
          echo "Installing Homebrew..."
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "PATH=/usr/local/bin:/opt/homebrew/bin:$PATH" >> $GITHUB_ENV
        fi
        brew install cmake
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          brew install gcc
          echo "CMAKE_CXX_COMPILER=$(brew --prefix gcc)/bin/g++" >> $GITHUB_ENV
        else
          brew install llvm
          echo "CMAKE_CXX_COMPILER=$(brew --prefix llvm)/bin/clang++" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Set up compiler (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake.install --no-progress
        choco install mingw --no-progress
        echo "C:\ProgramData\chocolatey\bin" >> %GITHUB_PATH%
        echo "C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin" >> %GITHUB_PATH%
        echo "CMAKE_CXX_COMPILER=g++" >> %GITHUB_ENV%
      shell: cmd

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_CXX_COMPILER=${{ env.CMAKE_CXX_COMPILER }}
      shell: bash

    - name: Build project
      run: |
        cd build
        cmake --build .
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dnapass_generator-${{ matrix.os }}-${{ matrix.compiler }}
        path: build/dnapass_generator${{ matrix.os == 'windows-latest' && '.exe' || '' }}

    - name: Publish to GitHub Releases
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: build/dnapass_generator${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
